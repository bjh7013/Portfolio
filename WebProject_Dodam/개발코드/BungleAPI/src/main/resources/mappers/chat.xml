<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bungle.dao.ChatDAO">
	
	<insert id="insertChat" parameterType="Chat"
		useGeneratedKeys="true" keyProperty="chatNo">
		insert into chat(
		user_no,
		chat_room_no,
		chat_type,
		content
		)
		value (
		#{userNo},
		#{chatRoomNo},
		#{chatType},
		#{content}
		)
	</insert>
	<update id="updateChat" parameterType="Chat">
		update chat
		set audio_path = #{audioPath}
		where chat_no = #{chatNo}
	</update>
	<!-- delete 처리 -->
	<delete id="deleteChat" parameterType="Integer">
		delete from chat
		where chat_no=#{chatNo}
	</delete>
	
	<select id="selectChatByRoomNo" 
		resultType="Chat" parameterType="Chat">
		select *
		from chat
		where chat_room_no=#{chatRoomNo} 
	</select>
	
 	<select id="selectLimitTen" parameterType="Integer" resultType="Chat">
		select *
		from chat
		limit #{page}, 10
	</select>
	
	<select id="countRows" resultType="Integer">
		select count(*) from chat;
	</select>
	<select id="isAuthorized" resultType="boolean">
		select if(count(*) > 0, true,false) 
		from class left join class_signup using(class_no)
		where class_no = (select class_no from chat join chat_room using(chat_room_no) where chat_no = #{chatNo})
			and ( (student_no = #{userNo} and is_approved = 1) or class.user_no = #{userNo})
	</select>
	<select id="getChatAudioFile" resultType="String">
		select audio_path
		from chat
		where chat_no = #{chatNo}
	</select>
	
	<select id="selectChatBefore" parameterType="Chat" resultType="Chat">
		select *
		from chat c
		left join user us on c.user_no =us.user_no
		where chat_room_no=#{chatRoomNo} 
		<if test="chatNo != 0">
			and chat_no <![CDATA[<]]> #{chatNo}
		</if>
		order by c.chat_no DESC limit 20;
	</select>
	 
</mapper>